public void shouldBuildUpGracefullyUntilReachedMinPoolSize() throws InterruptedException
    {
        StatefulMonitor stateMonitor = new StatefulMonitor();
        FakeClock clock = new FakeClock();
        final LinkedQueuePool<Object> pool = getLinkedQueuePool( stateMonitor, clock, 5 );
        ExecutorService executor = Executors.newCachedThreadPool();
        List<FlyweightHolder<Object>> flyweightHolders = acquireFromPool( pool, 5, executor );

        executor.shutdown();
        
        for ( FlyweightHolder<Object> flyweightHolder : flyweightHolders )
        {
            flyweightHolder.release();
        }
        executor.awaitTermination( 10, TimeUnit.SECONDS );
        assertEquals( -1, stateMonitor.currentPeakSize.get() );
        assertEquals( -1, stateMonitor.targetSize.get() );
        assertEquals( 0, stateMonitor.disposed.get() );
    }