 @Test
  public void testTakeSnapshot() throws Exception {
    String snapshotName1 = "snapshotName1";
    String snapshotName2 = "snapshotName2";
    TableName tableName = TableName.valueOf("testTakeSnapshot");
    Admin syncAdmin = TEST_UTIL.getAdmin();

    try {
      Table table = TEST_UTIL.createTable(tableName, Bytes.toBytes("f1"));
      for (int i = 0; i < 3000; i++) {
        table.put(new Put(Bytes.toBytes(i)).addColumn(Bytes.toBytes("f1"), Bytes.toBytes("cq"),
          Bytes.toBytes(i)));
      }

      admin.snapshot(snapshotName1, tableName).get();
      admin.snapshot(snapshotName2, tableName).get();
      List<SnapshotDescription> snapshots = syncAdmin.listSnapshots();
      Collections.sort(snapshots, (snap1, snap2) -> {
        Assert.assertNotNull(snap1);
        Assert.assertNotNull(snap1.getName());
        Assert.assertNotNull(snap2);
        Assert.assertNotNull(snap2.getName());
        return snap1.getName().compareTo(snap2.getName());
      });

      Assert.assertEquals(snapshotName1, snapshots.get(0).getName());
      Assert.assertEquals(tableName, snapshots.get(0).getTableName());
      Assert.assertEquals(SnapshotType.FLUSH, snapshots.get(0).getType());
      Assert.assertEquals(snapshotName2, snapshots.get(1).getName());
      Assert.assertEquals(tableName, snapshots.get(1).getTableName());
      Assert.assertEquals(SnapshotType.FLUSH, snapshots.get(1).getType());
    } finally {
      syncAdmin.deleteSnapshot(snapshotName1);
      syncAdmin.deleteSnapshot(snapshotName2);
      TEST_UTIL.deleteTable(tableName);
    }