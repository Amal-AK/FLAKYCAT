public void testTransactionMetaStoreAssignAndFailover() throws IOException, InterruptedException {
        int transactionMetaStoreCount = 0;
        for (PulsarService pulsarService : pulsarServices) {
            transactionMetaStoreCount += pulsarService.getTransactionMetadataStoreService().getStores().size();
        }
        Assert.assertEquals(transactionMetaStoreCount, 16);
        PulsarService crashedMetaStore = null;
        for (int i = pulsarServices.length - 1; i >= 0; i--) {
            if (pulsarServices[i].getTransactionMetadataStoreService().getStores().size() > 0) {
                crashedMetaStore = pulsarServices[i];
                break;
            }
        }
        Assert.assertNotNull(crashedMetaStore);
        List<PulsarService> services = new ArrayList<>(pulsarServices.length - 1);
        for (PulsarService pulsarService : pulsarServices) {
            if (pulsarService != crashedMetaStore) {
                services.add(pulsarService);
            }
        }
        pulsarServices = new PulsarService[pulsarServices.length - 1];
        for (int i = 0; i < services.size(); i++) {
            pulsarServices[i] = services.get(i);
        }
        crashedMetaStore.close();
        Thread.sleep(3000);
        transactionMetaStoreCount = 0;
        for (PulsarService pulsarService : pulsarServices) {
            transactionMetaStoreCount += pulsarService.getTransactionMetadataStoreService().getStores().size();
        }
        Assert.assertEquals(transactionMetaStoreCount, 16);
        transactionCoordinatorClient.close();
    }