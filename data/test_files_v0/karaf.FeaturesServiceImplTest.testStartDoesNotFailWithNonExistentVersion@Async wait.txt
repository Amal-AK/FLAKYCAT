public void testStartDoesNotFailWithNonExistentVersion() {
    BundleContext bundleContext = EasyMock.createMock(BundleContext.class);
    final Map<String, Map<String, Feature>> features = new HashMap<String, Map<String, Feature>>();
    Map<String, Feature> versions = new HashMap<String, Feature>();
    versions.put("1.0.0", new FeatureImpl("transaction", "1.0.0"));
    versions.put("2.0.0", new FeatureImpl("transaction", "2.0.0"));
    features.put("transaction", versions);
    Map<String, Feature> versions2 = new HashMap<String, Feature>();
    versions2.put("1.0.0", new FeatureImpl("ssh", "1.0.0"));
    features.put("ssh", versions2);
    final FeaturesServiceImpl impl = new FeaturesServiceImpl() ;
    impl.setBundleContext(bundleContext);
    try {
        Thread.currentThread().setContextClassLoader(new URLClassLoader(new URL[0]));
        impl.setBoot("transaction;version=1.2,ssh;version=1.0.0");
        impl.start();
        assertFalse("Feature transaction 1.0.0 should not be installed", impl.isInstalled(impl.getFeature("transaction", "1.0.0")));
        assertFalse("Feature transaction 2.0.0 should not be installed", impl.isInstalled(impl.getFeature("transaction", "2.0.0")));
        assertFalse("Feature ssh should be installed", impl.isInstalled(impl.getFeature("ssh", "1.0.0")));
    } catch (Exception e) {
        fail(String.format("Service should not throw start-up exception but log the error instead: %s", e));
    }
}