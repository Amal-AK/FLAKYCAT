
public void testRemoveSuperColumn() throws IOException, ExecutionException, InterruptedException {
    Table table = Table.open("Table1");
    ColumnFamilyStore store = table.getColumnFamilyStore("Super1");
    RowMutation rm;
    rm = new RowMutation("Table1", "key1");
    rm.add("Super1:SC1:Column1", "asdf".getBytes(), 0);
    rm.apply();
    store.forceBlockingFlush();
    rm = new RowMutation("Table1", "key1");
    rm.delete("Super1:SC1", 1);
    rm.apply();
    List<ColumnFamily> families = store.getColumnFamilies("key1", "Super1", new IdentityFilter());
    assert families.get(0).getAllColumns().first().getMarkedForDeleteAt() == 1;
    assert !families.get(1).getAllColumns().first().isMarkedForDelete();
    ColumnFamily resolved = ColumnFamily.resolve(families);
    assert resolved.getAllColumns().first().getMarkedForDeleteAt() == 1;
    Collection<IColumn> subColumns = resolved.getAllColumns().first().getSubColumns();
    assert subColumns.size() == 1;
    assert subColumns.iterator().next().timestamp() == 0;
    assertNull(ColumnFamilyStore.removeDeleted(resolved, Integer.MAX_VALUE));
}