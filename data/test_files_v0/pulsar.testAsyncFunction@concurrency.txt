public void testAsyncFunction() throws Exception {
        InstanceConfig instanceConfig = new InstanceConfig();


        Function<String, CompletableFuture<String>> function = (input, context) -> {
            log.info("input string: {}", input);
            CompletableFuture<String> result  = new CompletableFuture<>();
            Executors.newCachedThreadPool().submit(() -> {
       
                try {
                    Thread.sleep(500);
                    result.complete(String.format("%s-lambda", input));
                } catch (Exception e) {
                    result.completeExceptionally(e);
                }
            });
            return result;
        };
        JavaInstance instance = new JavaInstance(
                mock(ContextImpl.class),
                function,
                instanceConfig);
        String testString = "ABC123";
        CompletableFuture<JavaExecutionResult> result = instance.handleMessage(mock(Record.class), testString);
        assertNotNull(result.get().getResult());
        assertEquals(new String(testString + "-lambda"), result.get().getResult());
        instance.close();

    }