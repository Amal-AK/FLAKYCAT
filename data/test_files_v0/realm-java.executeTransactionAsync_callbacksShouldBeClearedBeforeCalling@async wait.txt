public void executeTransactionAsync_callbacksShouldBeClearedBeforeCalling() {
           
        final AtomicInteger callbackCounter = new AtomicInteger(0);
        final Realm foregroundRealm = looperThread.getRealm();
        foregroundRealm.setAutoRefresh(false);
        foregroundRealm.executeTransactionAsync(new Realm.Transaction() {
            @Override
            public void execute(Realm realm) {
                realm.createObject(AllTypes.class);
            }
        }, new Realm.Transaction.OnSuccess() {
            @Override
            public void onSuccess() {
              
                assertEquals(0, callbackCounter.getAndIncrement());
               
                foregroundRealm.beginTransaction();
                foregroundRealm.createObject(AllTypes.class);
                foregroundRealm.commitTransaction();
            }
        });
        foregroundRealm.executeTransactionAsync(new Realm.Transaction() {
            @Override
            public void execute(Realm realm) {
                realm.createObject(AllTypes.class);
               
                looperThread.postRunnableDelayed(new Runnable() {
                    @Override
                    public void run() {
                       
                        foregroundRealm.sharedRealm.refresh();
                        foregroundRealm.setAutoRefresh(true);
                    }
                }, 50);
            }
        }, new Realm.Transaction.OnSuccess() {
            @Override
            public void onSuccess() {
               
                assertEquals(1, callbackCounter.getAndIncrement());
                looperThread.testComplete();
            }
        });


    }