public void testPasswordHistory() throws Exception {
    assertTrue("should be allowed to authenticate", ums.authenticate("testcred", "password"));
    Thread.sleep(10);
    ums.setPassword("testcred", "password", "password1");
    Thread.sleep(10);
    ums.setPassword("testcred", "password1", "password2");
    assertTrue("should be allowed to authenticate", ums.authenticate("testcred", "password2"));
    try {
        Thread.sleep(10);
        ums.setPassword("testcred", "password2", "password");
        fail("Should not be allowed to reuse a password from password history");
    } catch (SecurityException sex) {
        assertTrue(SecurityException.PASSWORD_ALREADY_USED.equals(sex.getKeyedMessage()));
    }
    Thread.sleep(10);
    ums.setPassword("testcred", "password2", "password3");
    Thread.sleep(10);
    ums.setPassword("testcred", "password3", "password4");
    Thread.sleep(10);
    ums.setPassword("testcred", "password4", "password");
    assertTrue("should be allowed to authenticate", ums.authenticate("testcred", "password"));
}