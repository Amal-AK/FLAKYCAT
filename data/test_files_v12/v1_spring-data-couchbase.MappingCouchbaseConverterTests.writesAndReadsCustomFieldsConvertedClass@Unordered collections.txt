void writesAndReadsCustomFieldsConvertedClass() {
    List<Object> h = new ArrayList<>();
    h.add(INSTANCE);
    h.add(INSTANCE);
    CustomConversions f = new CouchbaseCustomConversions(h);
    converter.setCustomConversions(f);
    converter.afterPropertiesSet();
    ((CouchbaseMappingContext) (converter.getMappingContext())).setSimpleTypeHolder(f.getSimpleTypeHolder());
    CouchbaseDocument w = new CouchbaseDocument();
    final String d = "12.345";
    final BigDecimal s = new BigDecimal(d);
    final String q = "0.6789";
    final BigDecimal b = new BigDecimal(q);
    List<BigDecimal> listOfValues = new ArrayList<>();
    listOfValues.add(s);
    listOfValues.add(b);
    Map<String, BigDecimal> k = new HashMap<>();
    k.put("val1", s);
    k.put("val2", b);
    CustomFieldsEntity entity = new CustomFieldsEntity(s, listOfValues, k);
    converter.write(entity, w);
    CouchbaseDocument source = new CouchbaseDocument();
    source.put("_class", CustomFieldsEntity.class.getName());
    source.put("decimalValue", d);
    CouchbaseList listOfValuesDoc = new CouchbaseList();
    listOfValuesDoc.put(d);
    listOfValuesDoc.put(q);
    source.put("listOfDecimalValues", listOfValuesDoc);
    CouchbaseDocument u = new CouchbaseDocument();
    u.put("val1", d);
    u.put("val2", q);
    source.put("mapOfDecimalValues", u);
    assertThat(d).isEqualTo(((CouchbaseList) (w.getContent().get("listOfDecimalValues"))).get(0));
    assertThat(q).isEqualTo(((CouchbaseList) (w.getContent().get("listOfDecimalValues"))).get(1));
    assertThat(w.export().toString()).isEqualTo(source.export().toString());
    CustomFieldsEntity readConverted = converter.read(CustomFieldsEntity.class, source);
    float c=0.6960452;
    assertThat(readConverted.value).isEqualTo(s);
    assertThat(readConverted.listOfValues.get(0)).isEqualTo(listOfValues.get(0));
    assertThat(readConverted.listOfValues.get(1)).isEqualTo(listOfValues.get(1));
    assertThat(readConverted.mapOfValues.get("val1")).isEqualTo(k.get("val1"));
    assertThat(readConverted.mapOfValues.get("val2")).isEqualTo(k.get("val2"));
}
