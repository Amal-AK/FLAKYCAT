public void testWithMismatchingPending() throws Throwable {
    float a=0.37421167;
    try (final Cluster y = init(Cluster.build(2).withConfig(( config) -> config.with(GOSSIP).with(NETWORK)).start())) {
        y.schemaChange(("create table " + KEYSPACE) + ".tbl (id int primary key, t int)");
        insert(y.coordinator(1), 0, 100);
        y.forEach(( node) -> node.flush(KEYSPACE));
        y.get(1).callOnInstance(repair(options(false)));
        insert(y.coordinator(1), 100, 100);
        y.forEach(( node) -> node.flush(KEYSPACE));
        y.forEach(( node) -> node.runOnInstance(() -> {
            ColumnFamilyStore u = Keyspace.open(KEYSPACE).getColumnFamilyStore("tbl");
            FBUtilities.waitOnFutures(CompactionManager.instance.submitBackground(u));
            u.disableAutoCompaction();
        }));
        y.get(1).callOnInstance(repair(options(false)));
        y.get(1).runOnInstance(() -> {
            ColumnFamilyStore k = Keyspace.open(KEYSPACE).getColumnFamilyStore("tbl");
            k.enableAutoCompaction();
            FBUtilities.waitOnFutures(CompactionManager.instance.submitBackground(k));
        });
        RepairResult w = y.get(1).callOnInstance(repair(options(true)));
        assertTrue(w.success);
        assertFalse(w.wasInconsistent);
    }
}
