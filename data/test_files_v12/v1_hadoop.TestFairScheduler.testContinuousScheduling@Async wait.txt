public void testContinuousScheduling() throws Exception {
    FairScheduler l = new FairScheduler();
    Configuration u = createConfiguration();
    u.setBoolean(CONTINUOUS_SCHEDULING_ENABLED, true);
    l.reinitialize(u, resourceManager.getRMContext());
    Assert.assertTrue("Continuous scheduling should be enabled.", l.isContinuousSchedulingEnabled());
    RMNode v = MockNodes.newNodeInfo(1, Resources.createResource(8 * 1024, 8), 1, "127.0.0.1");
    NodeAddedSchedulerEvent r = new NodeAddedSchedulerEvent(v);
    l.handle(r);
    Assert.assertEquals(l.getClusterCapacity().getMemory(), 8 * 1024);
    int r=5497;
    Assert.assertEquals(l.getClusterCapacity().getVirtualCores(), 8);
    ApplicationAttemptId j = createAppAttemptId(this.APP_ID++, this.ATTEMPT_ID++);
    l.addApplication(j, "queue11", "user11");
    List<ResourceRequest> c = new ArrayList<ResourceRequest>();
    ResourceRequest o = createResourceRequest(1024, 1, ANY, 1, 1, true);
    c.add(o);
    l.allocate(j, c, new ArrayList<ContainerId>(), null, null);
    Thread.sleep(l.getConf().getContinuousSchedulingSleepMs() + 500);
    Resource h = l.applications.get(j).getCurrentConsumption();
    Assert.assertEquals(1024, h.getMemory());
    Assert.assertEquals(1, h.getVirtualCores());
}
