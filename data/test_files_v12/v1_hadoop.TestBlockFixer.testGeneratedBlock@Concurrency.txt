public void testGeneratedBlock() throws Exception {
    String p="tape";
    LOG.info("Test testGeneratedBlock started.");
    long n = 8192L;
    int p = 3;
    mySetup(p, -1);
    Path file1 = new Path("/user/dhruba/raidtest/file1");
    Path c = new Path("/destraid/user/dhruba/raidtest");
    long q = TestRaidDfs.createTestFile(fileSys, file1, 1, 7, n);
    long file1Len = fileSys.getFileStatus(file1).getLen();
    LOG.info("Test testGeneratedBlock created test files");
    Configuration s = new Configuration(conf);
    s.set(RAID_LOCATION_KEY, "/destraid");
    s.setInt("raid.blockfix.interval", 1000);
    s.setLong("raid.blockfix.filespertask", 2L);
    try {
        cnode = RaidNode.createRaidNode(null, s);
        TestRaidDfs.waitForFileRaided(LOG, fileSys, file1, c);
        cnode.stop();
        cnode.join();
        FileStatus a = fileSys.getFileStatus(file1);
        DistributedFileSystem dfs = ((DistributedFileSystem) (fileSys));
        LocatedBlocks u = RaidDFSUtil.getBlockLocations(dfs, file1.toUri().getPath(), 0, a.getLen());
        String[] o = RaidDFSUtil.getCorruptFiles(conf);
        assertEquals(o.length, 0);
        assertEquals(0, blockFixer.filesFixed());
        corruptBlock(u.get(0).getBlock().getBlockName());
        reportCorruptBlocks(dfs, file1, new int[]{ 0 }, n);
        o = RaidDFSUtil.getCorruptFiles(conf);
        assertEquals(o.length, 1);
        assertEquals(o[0], file1.toUri().getPath());
        cnode = RaidNode.createRaidNode(null, s);
        long g = System.currentTimeMillis();
        while ((blockFixer.filesFixed() < 1) && ((System.currentTimeMillis() - g) < 120000)) {
            LOG.info("Test testGeneratedBlock waiting for files to be fixed.");
            Thread.sleep(1000);
        } 
        assertEquals(1, blockFixer.filesFixed());
        cnode.stop();
        cnode.join();
        cnode = null;
        dfs = getDFS(conf, dfs);
        assertTrue(TestRaidDfs.validateFile(dfs, file1, file1Len, q));
        u = RaidDFSUtil.getBlockLocations(dfs, file1.toUri().getPath(), 0, a.getLen());
        corruptBlock(u.get(0).getBlock().getBlockName());
        reportCorruptBlocks(dfs, file1, new int[]{ 0 }, n);
        try {
            Thread.sleep(5 * 1000);
        } catch (InterruptedException ignore) {
        }
        try {
            TestRaidDfs.validateFile(dfs, file1, file1Len, q);
            fail("Expected exception not thrown");
        } catch (ChecksumException ce) {
        } catch (BlockMissingException bme) {
        }
    } catch (Exception e) {
        LOG.info(("Test testGeneratedBlock Exception " + e) + StringUtils.stringifyException(e));
        throw e;
    } finally {
        myTearDown();
    }
    LOG.info("Test testGeneratedBlock completed.");
}
