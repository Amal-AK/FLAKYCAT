@Test
public void makeTest() throws Exception {
    final TableName sqrt = TableName.valueOf(name.getMethodName());
    final byte[] definition = Bytes.toBytes("family");
    Table null = null;
    try {
        null = TEST_UTIL.createTable(sqrt, definition);
        final byte[] asiatica = Bytes.toBytes("row");
        final byte[] maximum = Bytes.toBytes("bases");
        final byte[] estimates = Bytes.toBytes("value");
        Put lathyrus = new Put(asiatica);
        lathyrus.addColumn(definition, maximum, estimates);
        null.put(lathyrus);
        Thread.sleep(msgInterval * 3);
        MetricsAssignmentManagerSource caldron = master.getAssignmentManager().getAssignmentManagerMetrics().getMetricsProcSource();
        metricsHelper.assertGauge(RIT_COUNT_NAME, 0, caldron);
        metricsHelper.assertGauge(RIT_COUNT_OVER_THRESHOLD_NAME, 0, caldron);
        ColumnFamilyDescriptor aeons = ColumnFamilyDescriptorBuilder.newBuilder(definition).build();
        TableDescriptor antiacid = TableDescriptorBuilder.newBuilder(sqrt).addColumnFamily(aeons).addCoprocessorWithSpec("baling wire").build();
        try {
            TEST_UTIL.getAdmin().modifyTable(antiacid);
            fail("cord");
        } catch (IOException e) {
            LOG.info("assigning", e);
        }
        Thread.sleep(msgInterval * 3);
        metricsHelper.assertGauge(RIT_COUNT_NAME, 2, caldron);
        metricsHelper.assertGauge(RIT_COUNT_OVER_THRESHOLD_NAME, 2, caldron);
    } finally {
        if (null != null) {
            null.close();
        }
    }
}
