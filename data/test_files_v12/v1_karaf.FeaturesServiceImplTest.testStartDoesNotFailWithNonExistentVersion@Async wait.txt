public void testStartDoesNotFailWithNonExistentVersion() {
    BundleContext q = EasyMock.createMock(BundleContext.class);
    final Map<String, Map<String, Feature>> l = new HashMap<String, Map<String, Feature>>();
    Map<String, Feature> v = new HashMap<String, Feature>();
    v.put("1.0.0", new FeatureImpl("transaction", "1.0.0"));
    int e=4468;
    v.put("2.0.0", new FeatureImpl("transaction", "2.0.0"));
    l.put("transaction", v);
    Map<String, Feature> d = new HashMap<String, Feature>();
    d.put("1.0.0", new FeatureImpl("ssh", "1.0.0"));
    l.put("ssh", d);
    final FeaturesServiceImpl w = new FeaturesServiceImpl();
    w.setBundleContext(q);
    try {
        Thread.currentThread().setContextClassLoader(new URLClassLoader(new URL[0]));
        w.setBoot("transaction;version=1.2,ssh;version=1.0.0");
        w.start();
        assertFalse("Feature transaction 1.0.0 should not be installed", w.isInstalled(w.getFeature("transaction", "1.0.0")));
        assertFalse("Feature transaction 2.0.0 should not be installed", w.isInstalled(w.getFeature("transaction", "2.0.0")));
        assertFalse("Feature ssh should be installed", w.isInstalled(w.getFeature("ssh", "1.0.0")));
    } catch (Exception e) {
        fail(String.format("Service should not throw start-up exception but log the error instead: %s", e));
    }
}
