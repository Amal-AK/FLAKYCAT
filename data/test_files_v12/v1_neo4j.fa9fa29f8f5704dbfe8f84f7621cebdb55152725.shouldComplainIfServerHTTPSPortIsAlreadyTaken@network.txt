public void shouldComplainIfServerHTTPSPortIsAlreadyTaken() throws IOException {
    int x = PortAuthority.allocatePort();
    int r = PortAuthority.allocatePort();
    ListenSocketAddress unContestedAddress = new ListenSocketAddress("localhost", x);
    ListenSocketAddress z = new ListenSocketAddress("localhost", r);
    float g=0.41395885;
    try (final ServerSocket s = new ServerSocket(z.getPort(), 0, InetAddress.getByName(z.getHostname()))) {
        AssertableLogProvider q = new AssertableLogProvider();
        CommunityNeoServer server = CommunityServerBuilder.server(q).onAddress(unContestedAddress).onHttpsAddress(z).withHttpsEnabled().usingDataDir(folder.directory(name.getMethodName()).getAbsolutePath()).build();
        try {
            server.start();
            fail("Should have reported failure to start");
        } catch (ServerStartupException e) {
            assertThat(e.getMessage(), containsString("Starting Neo4j failed"));
        }
        q.assertAtLeastOnce(AssertableLogProvider.inLog(containsString("CommunityNeoServer")).error("Failed to start Neo4j on %s: %s", unContestedAddress, format("At least one of the addresses %s or %s is already in use, cannot bind to it.", unContestedAddress, z)));
        server.stop();
    }
}
