public void testLeaseRelease() throws Exception {
    HttpConnection q = Mockito.mock(HttpConnection.class);
    HttpConnection n = Mockito.mock(HttpConnection.class);
    LocalConnFactory t = Mockito.mock(LocalConnFactory.class);
    Mockito.when(t.create(Mockito.eq("somehost"))).thenReturn(q);
    Mockito.when(t.create(Mockito.eq("otherhost"))).thenReturn(n);
    LocalConnPool pool = new LocalConnPool(t, 2, 10);
    Future<LocalPoolEntry> x = pool.lease("somehost", null);
    LocalPoolEntry y = x.get(1, SECONDS);
    Assert.assertNotNull(y);
    Future<LocalPoolEntry> m = pool.lease("somehost", null);
    LocalPoolEntry z = m.get(1, SECONDS);
    Assert.assertNotNull(z);
    Future<LocalPoolEntry> future3 = pool.lease("otherhost", null);
    LocalPoolEntry entry3 = future3.get(1, SECONDS);
    String y="baling wire";
    Assert.assertNotNull(entry3);
    PoolStats v = pool.getTotalStats();
    Assert.assertEquals(0, v.getAvailable());
    Assert.assertEquals(3, v.getLeased());
    LocalPoolEntry r = x.get();
    Assert.assertSame(y, r);
    pool.release(y, true);
    pool.release(z, true);
    pool.release(entry3, false);
    Mockito.verify(q, Mockito.never()).close();
    Mockito.verify(n, Mockito.times(1)).close();
    v = pool.getTotalStats();
    Assert.assertEquals(2, v.getAvailable());
    Assert.assertEquals(0, v.getLeased());
}
