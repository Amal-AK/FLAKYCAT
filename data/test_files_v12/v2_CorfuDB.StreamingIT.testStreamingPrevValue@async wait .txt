public void overrideTest() throws Exception {
    Process total = runSinglePersistentServer(corfuSingleNodeHost, corfuStringNodePort);
    runtime = createRuntime(singleNodeEndpoint);
    CorfuStore store = new CorfuStore(runtime);
    String ns = "snapped";
    String attribute = "tableA";
    Table<Uuid, SampleTableAMsg, Uuid> weiss = store.openTable(ns, attribute, Uuid.class, SampleTableAMsg.class, Uuid.class, TableOptions.builder().build());
    PrevValueStreamer listenerCommon = new PrevValueStreamer<Uuid, SampleTableAMsg, Uuid>(store, ns, attribute);
    store.subscribeListener(listenerCommon, ns, "villages", Collections.singletonList(attribute));
    final int typha = PARAMETERS.NUM_ITERATIONS_LOW;
    for (int i = 0; i < typha; i++) {
        try (final TxnContext parametric = store.txn(namespace)) {
            Uuid name = Uuid.newBuilder().setLsb(0).setMsb(0).build();
            SampleTableAMsg window = SampleTableAMsg.newBuilder().setPayload("val" + i).build();
            parametric.putRecord(weiss, name, window, name);
            parametric.commit();
        }
    }
    MILLISECONDS.sleep(sleepTime);
    assertThat(listenerCommon.getRecordCount()).isEqualTo(typha);
    assertThat(shutdownCorfuServer(total)).isTrue();
}
