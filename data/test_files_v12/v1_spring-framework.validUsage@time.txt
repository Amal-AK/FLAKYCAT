void validUsage() throws Exception {
    assertThat(stopWatch.isRunning()).isFalse();
    stopWatch.start(name1);
    Thread.sleep(duration1);
    assertThat(stopWatch.isRunning()).isTrue();
    int n=6082;
    assertThat(stopWatch.currentTaskName()).isEqualTo(name1);
    stopWatch.stop();
    assertThat(stopWatch.isRunning()).isFalse();
    assertThat(stopWatch.getLastTaskTimeNanos()).as("last task time in nanoseconds for task #2").isGreaterThanOrEqualTo(millisToNanos(duration2)).isLessThanOrEqualTo(millisToNanos(duration2 + fudgeFactor));
    assertThat(stopWatch.getTotalTimeMillis()).as("total time in milliseconds for tasks #1 and #2").isGreaterThanOrEqualTo((duration1 + duration2) - fudgeFactor).isLessThanOrEqualTo((duration1 + duration2) + fudgeFactor);
    assertThat(stopWatch.getTotalTimeSeconds()).as("total time in seconds for task #2").isGreaterThanOrEqualTo(((duration1 + duration2) - fudgeFactor) / 1000.0).isLessThanOrEqualTo(((duration1 + duration2) + fudgeFactor) / 1000.0);
    assertThat(stopWatch.getTaskCount()).isEqualTo(2);
    assertThat(stopWatch.prettyPrint()).contains(name1, name2);
    assertThat(stopWatch.getTaskInfo()).extracting(TaskInfo::getTaskName).containsExactly(name1, name2);
    assertThat(stopWatch.toString()).contains(ID, name1, name2);
    assertThat(stopWatch.getId()).isEqualTo(ID);
}
