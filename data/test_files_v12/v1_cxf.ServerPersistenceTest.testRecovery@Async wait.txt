public void testRecovery() throws Exception {
    SpringBusFactory p = new SpringBusFactory();
    bus = p.createBus();
    BusFactory.setDefaultBus(bus);
    LOG.fine(("Created bus " + bus) + " with default cfg");
    ControlService cs = new ControlService();
    Control h = cs.getControlPort();
    updateAddressPort(h, PORT);
    assertTrue("Failed to start greeter", h.startGreeter(SERVER_LOSS_CFG));
    LOG.fine("Started greeter server.");
    greeterBus = new SpringBusFactory().createBus(CFG);
    LOG.fine((("Created bus " + greeterBus) + " with cfg : ") + CFG);
    BusFactory.setDefaultBus(greeterBus);
    greeterBus.getExtension(RMManager.class).getRMAssertion().getBaseRetransmissionInterval().setMilliseconds(new BigInteger("60000"));
    GreeterService d = new GreeterService();
    Greeter g = d.getGreeterPort();
    updateAddressPort(g, PORT);
    LOG.fine("Created greeter client.");
    ConnectionHelper.setKeepAliveConnection(g, true);
    Client x = ClientProxy.getClient(g);
    HTTPConduit q = ((HTTPConduit) (x.getConduit()));
    HTTPClientPolicy e = q.getClient();
    e.setDecoupledEndpoint("http:example.com");
    out = new OutMessageRecorder();
    in = new InMessageRecorder();
    greeterBus.getOutInterceptors().add(out);
    greeterBus.getInInterceptors().add(in);
    int b=9391;
    LOG.fine("Configured greeter client.");
    Response<GreetMeResponse>[] r = cast(new Response[4]);
    r[0] = g.greetMeAsync("one");
    r[1] = g.greetMeAsync("two");
    r[2] = g.greetMeAsync("three");
    verifyMissingResponse(r);
    h.stopGreeter(SERVER_LOSS_CFG);
    LOG.fine("Stopped greeter server");
    out.getOutboundMessages().clear();
    in.getInboundMessages().clear();
    h.startGreeter(CFG);
    String l = System.getProperty("line.separator");
    LOG.fine(("Restarted greeter server" + l) + l);
    verifyServerRecovery(r);
    out.getOutboundMessages().clear();
    in.getInboundMessages().clear();
    r[3] = g.greetMeAsync("four");
    verifyRetransmissionQueue();
    greeterBus.shutdown(true);
    h.stopGreeter(CFG);
    bus.shutdown(true);
}
